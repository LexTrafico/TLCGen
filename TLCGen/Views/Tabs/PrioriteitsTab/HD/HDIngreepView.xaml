<UserControl x:Class="TLCGen.Views.HDIngreepView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ct="clr-namespace:TLCGen.Controls;assembly=TLCGen.Controls"
             mc:Ignorable="d" 
             x:Name="root"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConv" />
        <Style TargetType="{x:Type ListBoxItem}" x:Key="ListBoxItemStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                                Value="False" />
                                    <Condition Property="IsSelected"
                                                Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{x:Static SystemColors.HighlightBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                                Value="True" />
                                    <Condition Property="IsSelected"
                                                Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{x:Static SystemColors.HighlightBrush}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Label Content="Geen instellingen beschikbaar" Grid.Row="0">
            <Label.Style>
                <Style TargetType="Label">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=root,Path=DataContext,UpdateSourceTrigger=PropertyChanged}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
        </Label>
        <ct:SimplePropertyEditor BoundObject="{Binding ElementName=root,Path=DataContext}" Grid.Row="1">
            <ct:SimplePropertyEditor.Style>
                <Style TargetType="UserControl">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=root,Path=DataContext,UpdateSourceTrigger=PropertyChanged}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ct:SimplePropertyEditor.Style>
        </ct:SimplePropertyEditor>
        <StackPanel Orientation="Vertical" Grid.Row="2" >
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=root,Path=DataContext}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <TextBlock Text="RIS" Margin="5" Padding="0" TextDecorations="Underline" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Label Content="RIS" IsEnabled="{Binding Path=OpticomAvailable}" />
                <CheckBox IsChecked="{Binding Path=RIS}" Grid.Column="1" Margin="5" VerticalAlignment="Center" />
                <Label Content="RIS start (dichtbij ss)" Grid.Row="1" Grid.Column="0" IsEnabled="{Binding Path=RIS}" Visibility="{Binding Path=RIS,Converter={StaticResource BoolToVisConv}}" />
                <TextBox Text="{Binding Path=RisStart}" Grid.Row="1" Grid.Column="1" Margin="2" Visibility="{Binding Path=RIS,Converter={StaticResource BoolToVisConv}}" />
                <Label Content="RIS end (verweg ss)" Grid.Row="2" Grid.Column="0" IsEnabled="{Binding Path=RIS}" Visibility="{Binding Path=RIS,Converter={StaticResource BoolToVisConv}}" />
                <TextBox Text="{Binding Path=RisEnd}" Grid.Row="2" Grid.Column="1" Margin="2" Visibility="{Binding Path=RIS,Converter={StaticResource BoolToVisConv}}" />
                <Label Content="RIS eta" Grid.Row="3" Grid.Column="0" IsEnabled="{Binding Path=RIS}" Visibility="{Binding Path=RIS,Converter={StaticResource BoolToVisConv}}" />
                <TextBox Text="{Binding Path=RisEta}" Grid.Row="3" Grid.Column="1" Margin="2" Visibility="{Binding Path=RIS,Converter={StaticResource BoolToVisConv}}" />
                <Label Content="RIS importance" Grid.ColumnSpan="2" Grid.Row="4" Grid.Column="0" Visibility="{Binding Path=RIS,Converter={StaticResource BoolToVisConv}}" />
                <ListView
                    Grid.Row="5" Grid.Column="0" SelectionMode="Multiple" Margin="2"
                    Grid.ColumnSpan="2" 
                    Visibility="{Binding Path=RIS,Converter={StaticResource BoolToVisConv}}" 
                    ItemsSource="{Binding Path=AvailableImportances}" IsEnabled="{Binding Path=RIS}" >
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource ListBoxItemStyle}">
                            <Style.Setters>
                                <Setter Property="IsSelected" Value="{Binding Path=IsSelected}" />
                            </Style.Setters>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Margin="2" Text="{Binding Path=ImportanceDescription}" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </StackPanel>
        <StackPanel Orientation="Vertical" Grid.Row="3" >
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=root,Path=DataContext}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <TextBlock Text="Overig" Margin="5" Padding="0" TextDecorations="Underline" />
            <Label Content="Opticom" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Label Content="Opticom aanwezig" IsEnabled="{Binding Path=OpticomAvailable}" />
                <CheckBox IsChecked="{Binding Path=Opticom}" Grid.Column="1"
                          Margin="5" VerticalAlignment="Center" IsEnabled="{Binding Path=OpticomAvailable}" />
                <Label Content="Opticom ingang" IsEnabled="{Binding Path=Opticom}" 
                       Grid.Row="1" />
                <ComboBox Margin="2" ItemsSource="{Binding Path=OpticomIngangen}" IsEnabled="{Binding Path=OpticomOn}"
                          Grid.Row="1" Grid.Column="1"
                          SelectedValue="{Binding Path=OpticomRelatedInput}" />
                <Label Content="Opticom inmeld filtertijd" IsEnabled="{Binding Path=Opticom}" 
                       Grid.Row="2" />
                <TextBox Text="{Binding Path=OpticomInmeldingFilterTijd}" Grid.Row="2" Grid.Column="1" Margin="2" />
                <Label Content="Inmelding ook door andere fase" Grid.Row="3" />
                <CheckBox IsChecked="{Binding Path=InmeldingOokDoorToepassen}" Grid.Column="1" Margin="5" VerticalAlignment="Center" Grid.Row="3" />
                <Label Content="Inmelding ook door fase" IsEnabled="{Binding Path=InmeldingOokDoorToepassen}" 
                       Grid.Row="4" />
                <TextBox Text="{Binding Path=InmeldingOokDoorFase}" Grid.Row="4" Grid.Column="1" Margin="2" IsEnabled="{Binding Path=InmeldingOokDoorToepassen}" />
            </Grid>
            <Label Content="Meerealiserende fasen" />
            <ListView Height="Auto" ItemsSource="{Binding MeerealiserendeFasen}" SelectedItem="{Binding SelectedMeerealiserendeFase,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Margin="2" MinHeight="24" >
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="Transparent"/>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                 Color="Black"/>
                        </Style.Resources>
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Border BorderBrush="Gray" BorderThickness="1.0">
                                        <TextBlock Text="{Binding Path=Fase}" Padding="2" Background="Beige" />
                                    </Border>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Border BorderBrush="OrangeRed" BorderThickness="1.0">
                                                <TextBlock Text="{Binding Path=Fase}" Padding="2" Background="Beige" />
                                            </Border>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <StackPanel Orientation="Horizontal">
                <ComboBox Margin="2" ItemsSource="{Binding Path=Fasen}" SelectedValue="{Binding Path=SelectedFase}" />
                <Button Content="+" IsDefault="True" Command="{Binding AddMeerealiserendeFaseCommand}" HorizontalAlignment="Left" Margin="2" Width="30" />
                <Button Content="-" Command="{Binding RemoveMeerealiserendeFaseCommand}" HorizontalAlignment="Left" Margin="2" Width="30" />
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
