<UserControl x:Class="TLCGen.Views.FasenLijstTimersTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TLCGen.Views"
             xmlns:ext="clr-namespace:TLCGen.Extensions;assembly=TLCGen.Dependencies"
             xmlns:enums="clr-namespace:TLCGen.Models.Enumerations;assembly=TLCGen.Dependencies"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <DataGrid 
                  ItemsSource="{Binding Path=Fasen}"
                  Grid.Row="0"
            SelectionMode="Extended"
                  SelectedItem="{Binding Path=SelectedFaseCyclus,Mode=TwoWay}"
                  ext:DataGridExtensions.SelectedItemsList="{Binding Path=SelectedFaseCycli, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  AutoGenerateColumns="False" >
            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                      AncestorType={x:Type DataGridRow}}, 
                                      Path=Item.Naam}"/>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>
            <DataGrid.Columns>

                <!--<DataGridTextColumn Binding="{Binding Path=Define}" Header="Define" IsReadOnly="True" />-->
                <!--<DataGridTextColumn Binding="{Binding Path=Naam}" Header="Naam" IsReadOnly="True" />-->
                <DataGridTextColumn Binding="{Binding Path=TFG}" Header="TFG" />
                <DataGridTextColumn Binding="{Binding Path=TGG}" Header="TGG" />
                <DataGridTextColumn Binding="{Binding Path=TGG_min}" Header="TGG_min" />
                <DataGridTextColumn Binding="{Binding Path=TRG}" Header="TRG" />
                <DataGridTextColumn Binding="{Binding Path=TRG_min}" Header="TRG_min" />
                <DataGridTextColumn Binding="{Binding Path=TGL}" Header="TGL" />
                <DataGridTextColumn Binding="{Binding Path=TGL_min}" Header="TGL_min" />
                <DataGridTextColumn Binding="{Binding Path=Kopmax}" Header="Kopmax"  >
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=HasKopmax}" Value="false">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Background" Value="LightGray" />
                                    <Setter Property="Foreground" Value="LightGray" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Path=VeiligheidsGroenMinMG}" Header="Veil.gr.min.MG"  >
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=HasVeiligheidsGroen}" Value="false">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Background" Value="LightGray" />
                                    <Setter Property="Foreground" Value="LightGray" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Path=VeiligheidsGroenTijdsduur}" Header="Veil.gr.duur"  >
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=HasVeiligheidsGroen}" Value="false">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Background" Value="LightGray" />
                                    <Setter Property="Foreground" Value="LightGray" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
